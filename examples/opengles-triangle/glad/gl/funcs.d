module glad.gl.funcs;


private import glad.gl.types;
bool GL_ES_VERSION_2_0;
bool GL_ES_VERSION_3_0;
nothrow @nogc extern(System) {
alias fp_glActiveTexture = void function(GLenum);
alias fp_glAttachShader = void function(GLuint, GLuint);
alias fp_glBindAttribLocation = void function(GLuint, GLuint, const(GLchar)*);
alias fp_glBindBuffer = void function(GLenum, GLuint);
alias fp_glBindFramebuffer = void function(GLenum, GLuint);
alias fp_glBindRenderbuffer = void function(GLenum, GLuint);
alias fp_glBindTexture = void function(GLenum, GLuint);
alias fp_glBlendColor = void function(GLfloat, GLfloat, GLfloat, GLfloat);
alias fp_glBlendEquation = void function(GLenum);
alias fp_glBlendEquationSeparate = void function(GLenum, GLenum);
alias fp_glBlendFunc = void function(GLenum, GLenum);
alias fp_glBlendFuncSeparate = void function(GLenum, GLenum, GLenum, GLenum);
alias fp_glBufferData = void function(GLenum, GLsizeiptr, const(void)*, GLenum);
alias fp_glBufferSubData = void function(GLenum, GLintptr, GLsizeiptr, const(void)*);
alias fp_glCheckFramebufferStatus = GLenum function(GLenum);
alias fp_glClear = void function(GLbitfield);
alias fp_glClearColor = void function(GLfloat, GLfloat, GLfloat, GLfloat);
alias fp_glClearDepthf = void function(GLfloat);
alias fp_glClearStencil = void function(GLint);
alias fp_glColorMask = void function(GLboolean, GLboolean, GLboolean, GLboolean);
alias fp_glCompileShader = void function(GLuint);
alias fp_glCompressedTexImage2D = void function(GLenum, GLint, GLenum, GLsizei, GLsizei, GLint, GLsizei, const(void)*);
alias fp_glCompressedTexSubImage2D = void function(GLenum, GLint, GLint, GLint, GLsizei, GLsizei, GLenum, GLsizei, const(void)*);
alias fp_glCopyTexImage2D = void function(GLenum, GLint, GLenum, GLint, GLint, GLsizei, GLsizei, GLint);
alias fp_glCopyTexSubImage2D = void function(GLenum, GLint, GLint, GLint, GLint, GLint, GLsizei, GLsizei);
alias fp_glCreateProgram = GLuint function();
alias fp_glCreateShader = GLuint function(GLenum);
alias fp_glCullFace = void function(GLenum);
alias fp_glDeleteBuffers = void function(GLsizei, const(GLuint)*);
alias fp_glDeleteFramebuffers = void function(GLsizei, const(GLuint)*);
alias fp_glDeleteProgram = void function(GLuint);
alias fp_glDeleteRenderbuffers = void function(GLsizei, const(GLuint)*);
alias fp_glDeleteShader = void function(GLuint);
alias fp_glDeleteTextures = void function(GLsizei, const(GLuint)*);
alias fp_glDepthFunc = void function(GLenum);
alias fp_glDepthMask = void function(GLboolean);
alias fp_glDepthRangef = void function(GLfloat, GLfloat);
alias fp_glDetachShader = void function(GLuint, GLuint);
alias fp_glDisable = void function(GLenum);
alias fp_glDisableVertexAttribArray = void function(GLuint);
alias fp_glDrawArrays = void function(GLenum, GLint, GLsizei);
alias fp_glDrawElements = void function(GLenum, GLsizei, GLenum, const(void)*);
alias fp_glEnable = void function(GLenum);
alias fp_glEnableVertexAttribArray = void function(GLuint);
alias fp_glFinish = void function();
alias fp_glFlush = void function();
alias fp_glFramebufferRenderbuffer = void function(GLenum, GLenum, GLenum, GLuint);
alias fp_glFramebufferTexture2D = void function(GLenum, GLenum, GLenum, GLuint, GLint);
alias fp_glFrontFace = void function(GLenum);
alias fp_glGenBuffers = void function(GLsizei, GLuint*);
alias fp_glGenerateMipmap = void function(GLenum);
alias fp_glGenFramebuffers = void function(GLsizei, GLuint*);
alias fp_glGenRenderbuffers = void function(GLsizei, GLuint*);
alias fp_glGenTextures = void function(GLsizei, GLuint*);
alias fp_glGetActiveAttrib = void function(GLuint, GLuint, GLsizei, GLsizei*, GLint*, GLenum*, GLchar*);
alias fp_glGetActiveUniform = void function(GLuint, GLuint, GLsizei, GLsizei*, GLint*, GLenum*, GLchar*);
alias fp_glGetAttachedShaders = void function(GLuint, GLsizei, GLsizei*, GLuint*);
alias fp_glGetAttribLocation = GLint function(GLuint, const(GLchar)*);
alias fp_glGetBooleanv = void function(GLenum, GLboolean*);
alias fp_glGetBufferParameteriv = void function(GLenum, GLenum, GLint*);
alias fp_glGetError = GLenum function();
alias fp_glGetFloatv = void function(GLenum, GLfloat*);
alias fp_glGetFramebufferAttachmentParameteriv = void function(GLenum, GLenum, GLenum, GLint*);
alias fp_glGetIntegerv = void function(GLenum, GLint*);
alias fp_glGetProgramiv = void function(GLuint, GLenum, GLint*);
alias fp_glGetProgramInfoLog = void function(GLuint, GLsizei, GLsizei*, GLchar*);
alias fp_glGetRenderbufferParameteriv = void function(GLenum, GLenum, GLint*);
alias fp_glGetShaderiv = void function(GLuint, GLenum, GLint*);
alias fp_glGetShaderInfoLog = void function(GLuint, GLsizei, GLsizei*, GLchar*);
alias fp_glGetShaderPrecisionFormat = void function(GLenum, GLenum, GLint*, GLint*);
alias fp_glGetShaderSource = void function(GLuint, GLsizei, GLsizei*, GLchar*);
alias fp_glGetString = const(GLubyte)* function(GLenum);
alias fp_glGetTexParameterfv = void function(GLenum, GLenum, GLfloat*);
alias fp_glGetTexParameteriv = void function(GLenum, GLenum, GLint*);
alias fp_glGetUniformfv = void function(GLuint, GLint, GLfloat*);
alias fp_glGetUniformiv = void function(GLuint, GLint, GLint*);
alias fp_glGetUniformLocation = GLint function(GLuint, const(GLchar)*);
alias fp_glGetVertexAttribfv = void function(GLuint, GLenum, GLfloat*);
alias fp_glGetVertexAttribiv = void function(GLuint, GLenum, GLint*);
alias fp_glGetVertexAttribPointerv = void function(GLuint, GLenum, void**);
alias fp_glHint = void function(GLenum, GLenum);
alias fp_glIsBuffer = GLboolean function(GLuint);
alias fp_glIsEnabled = GLboolean function(GLenum);
alias fp_glIsFramebuffer = GLboolean function(GLuint);
alias fp_glIsProgram = GLboolean function(GLuint);
alias fp_glIsRenderbuffer = GLboolean function(GLuint);
alias fp_glIsShader = GLboolean function(GLuint);
alias fp_glIsTexture = GLboolean function(GLuint);
alias fp_glLineWidth = void function(GLfloat);
alias fp_glLinkProgram = void function(GLuint);
alias fp_glPixelStorei = void function(GLenum, GLint);
alias fp_glPolygonOffset = void function(GLfloat, GLfloat);
alias fp_glReadPixels = void function(GLint, GLint, GLsizei, GLsizei, GLenum, GLenum, void*);
alias fp_glReleaseShaderCompiler = void function();
alias fp_glRenderbufferStorage = void function(GLenum, GLenum, GLsizei, GLsizei);
alias fp_glSampleCoverage = void function(GLfloat, GLboolean);
alias fp_glScissor = void function(GLint, GLint, GLsizei, GLsizei);
alias fp_glShaderBinary = void function(GLsizei, const(GLuint)*, GLenum, const(void)*, GLsizei);
alias fp_glShaderSource = void function(GLuint, GLsizei, const(GLchar*)*, const(GLint)*);
alias fp_glStencilFunc = void function(GLenum, GLint, GLuint);
alias fp_glStencilFuncSeparate = void function(GLenum, GLenum, GLint, GLuint);
alias fp_glStencilMask = void function(GLuint);
alias fp_glStencilMaskSeparate = void function(GLenum, GLuint);
alias fp_glStencilOp = void function(GLenum, GLenum, GLenum);
alias fp_glStencilOpSeparate = void function(GLenum, GLenum, GLenum, GLenum);
alias fp_glTexImage2D = void function(GLenum, GLint, GLint, GLsizei, GLsizei, GLint, GLenum, GLenum, const(void)*);
alias fp_glTexParameterf = void function(GLenum, GLenum, GLfloat);
alias fp_glTexParameterfv = void function(GLenum, GLenum, const(GLfloat)*);
alias fp_glTexParameteri = void function(GLenum, GLenum, GLint);
alias fp_glTexParameteriv = void function(GLenum, GLenum, const(GLint)*);
alias fp_glTexSubImage2D = void function(GLenum, GLint, GLint, GLint, GLsizei, GLsizei, GLenum, GLenum, const(void)*);
alias fp_glUniform1f = void function(GLint, GLfloat);
alias fp_glUniform1fv = void function(GLint, GLsizei, const(GLfloat)*);
alias fp_glUniform1i = void function(GLint, GLint);
alias fp_glUniform1iv = void function(GLint, GLsizei, const(GLint)*);
alias fp_glUniform2f = void function(GLint, GLfloat, GLfloat);
alias fp_glUniform2fv = void function(GLint, GLsizei, const(GLfloat)*);
alias fp_glUniform2i = void function(GLint, GLint, GLint);
alias fp_glUniform2iv = void function(GLint, GLsizei, const(GLint)*);
alias fp_glUniform3f = void function(GLint, GLfloat, GLfloat, GLfloat);
alias fp_glUniform3fv = void function(GLint, GLsizei, const(GLfloat)*);
alias fp_glUniform3i = void function(GLint, GLint, GLint, GLint);
alias fp_glUniform3iv = void function(GLint, GLsizei, const(GLint)*);
alias fp_glUniform4f = void function(GLint, GLfloat, GLfloat, GLfloat, GLfloat);
alias fp_glUniform4fv = void function(GLint, GLsizei, const(GLfloat)*);
alias fp_glUniform4i = void function(GLint, GLint, GLint, GLint, GLint);
alias fp_glUniform4iv = void function(GLint, GLsizei, const(GLint)*);
alias fp_glUniformMatrix2fv = void function(GLint, GLsizei, GLboolean, const(GLfloat)*);
alias fp_glUniformMatrix3fv = void function(GLint, GLsizei, GLboolean, const(GLfloat)*);
alias fp_glUniformMatrix4fv = void function(GLint, GLsizei, GLboolean, const(GLfloat)*);
alias fp_glUseProgram = void function(GLuint);
alias fp_glValidateProgram = void function(GLuint);
alias fp_glVertexAttrib1f = void function(GLuint, GLfloat);
alias fp_glVertexAttrib1fv = void function(GLuint, const(GLfloat)*);
alias fp_glVertexAttrib2f = void function(GLuint, GLfloat, GLfloat);
alias fp_glVertexAttrib2fv = void function(GLuint, const(GLfloat)*);
alias fp_glVertexAttrib3f = void function(GLuint, GLfloat, GLfloat, GLfloat);
alias fp_glVertexAttrib3fv = void function(GLuint, const(GLfloat)*);
alias fp_glVertexAttrib4f = void function(GLuint, GLfloat, GLfloat, GLfloat, GLfloat);
alias fp_glVertexAttrib4fv = void function(GLuint, const(GLfloat)*);
alias fp_glVertexAttribPointer = void function(GLuint, GLint, GLenum, GLboolean, GLsizei, const(void)*);
alias fp_glViewport = void function(GLint, GLint, GLsizei, GLsizei);
alias fp_glReadBuffer = void function(GLenum);
alias fp_glDrawRangeElements = void function(GLenum, GLuint, GLuint, GLsizei, GLenum, const(void)*);
alias fp_glTexImage3D = void function(GLenum, GLint, GLint, GLsizei, GLsizei, GLsizei, GLint, GLenum, GLenum, const(void)*);
alias fp_glTexSubImage3D = void function(GLenum, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei, GLenum, GLenum, const(void)*);
alias fp_glCopyTexSubImage3D = void function(GLenum, GLint, GLint, GLint, GLint, GLint, GLint, GLsizei, GLsizei);
alias fp_glCompressedTexImage3D = void function(GLenum, GLint, GLenum, GLsizei, GLsizei, GLsizei, GLint, GLsizei, const(void)*);
alias fp_glCompressedTexSubImage3D = void function(GLenum, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei, GLenum, GLsizei, const(void)*);
alias fp_glGenQueries = void function(GLsizei, GLuint*);
alias fp_glDeleteQueries = void function(GLsizei, const(GLuint)*);
alias fp_glIsQuery = GLboolean function(GLuint);
alias fp_glBeginQuery = void function(GLenum, GLuint);
alias fp_glEndQuery = void function(GLenum);
alias fp_glGetQueryiv = void function(GLenum, GLenum, GLint*);
alias fp_glGetQueryObjectuiv = void function(GLuint, GLenum, GLuint*);
alias fp_glUnmapBuffer = GLboolean function(GLenum);
alias fp_glGetBufferPointerv = void function(GLenum, GLenum, void**);
alias fp_glDrawBuffers = void function(GLsizei, const(GLenum)*);
alias fp_glUniformMatrix2x3fv = void function(GLint, GLsizei, GLboolean, const(GLfloat)*);
alias fp_glUniformMatrix3x2fv = void function(GLint, GLsizei, GLboolean, const(GLfloat)*);
alias fp_glUniformMatrix2x4fv = void function(GLint, GLsizei, GLboolean, const(GLfloat)*);
alias fp_glUniformMatrix4x2fv = void function(GLint, GLsizei, GLboolean, const(GLfloat)*);
alias fp_glUniformMatrix3x4fv = void function(GLint, GLsizei, GLboolean, const(GLfloat)*);
alias fp_glUniformMatrix4x3fv = void function(GLint, GLsizei, GLboolean, const(GLfloat)*);
alias fp_glBlitFramebuffer = void function(GLint, GLint, GLint, GLint, GLint, GLint, GLint, GLint, GLbitfield, GLenum);
alias fp_glRenderbufferStorageMultisample = void function(GLenum, GLsizei, GLenum, GLsizei, GLsizei);
alias fp_glFramebufferTextureLayer = void function(GLenum, GLenum, GLuint, GLint, GLint);
alias fp_glMapBufferRange = void* function(GLenum, GLintptr, GLsizeiptr, GLbitfield);
alias fp_glFlushMappedBufferRange = void function(GLenum, GLintptr, GLsizeiptr);
alias fp_glBindVertexArray = void function(GLuint);
alias fp_glDeleteVertexArrays = void function(GLsizei, const(GLuint)*);
alias fp_glGenVertexArrays = void function(GLsizei, GLuint*);
alias fp_glIsVertexArray = GLboolean function(GLuint);
alias fp_glGetIntegeri_v = void function(GLenum, GLuint, GLint*);
alias fp_glBeginTransformFeedback = void function(GLenum);
alias fp_glEndTransformFeedback = void function();
alias fp_glBindBufferRange = void function(GLenum, GLuint, GLuint, GLintptr, GLsizeiptr);
alias fp_glBindBufferBase = void function(GLenum, GLuint, GLuint);
alias fp_glTransformFeedbackVaryings = void function(GLuint, GLsizei, const(GLchar*)*, GLenum);
alias fp_glGetTransformFeedbackVarying = void function(GLuint, GLuint, GLsizei, GLsizei*, GLsizei*, GLenum*, GLchar*);
alias fp_glVertexAttribIPointer = void function(GLuint, GLint, GLenum, GLsizei, const(void)*);
alias fp_glGetVertexAttribIiv = void function(GLuint, GLenum, GLint*);
alias fp_glGetVertexAttribIuiv = void function(GLuint, GLenum, GLuint*);
alias fp_glVertexAttribI4i = void function(GLuint, GLint, GLint, GLint, GLint);
alias fp_glVertexAttribI4ui = void function(GLuint, GLuint, GLuint, GLuint, GLuint);
alias fp_glVertexAttribI4iv = void function(GLuint, const(GLint)*);
alias fp_glVertexAttribI4uiv = void function(GLuint, const(GLuint)*);
alias fp_glGetUniformuiv = void function(GLuint, GLint, GLuint*);
alias fp_glGetFragDataLocation = GLint function(GLuint, const(GLchar)*);
alias fp_glUniform1ui = void function(GLint, GLuint);
alias fp_glUniform2ui = void function(GLint, GLuint, GLuint);
alias fp_glUniform3ui = void function(GLint, GLuint, GLuint, GLuint);
alias fp_glUniform4ui = void function(GLint, GLuint, GLuint, GLuint, GLuint);
alias fp_glUniform1uiv = void function(GLint, GLsizei, const(GLuint)*);
alias fp_glUniform2uiv = void function(GLint, GLsizei, const(GLuint)*);
alias fp_glUniform3uiv = void function(GLint, GLsizei, const(GLuint)*);
alias fp_glUniform4uiv = void function(GLint, GLsizei, const(GLuint)*);
alias fp_glClearBufferiv = void function(GLenum, GLint, const(GLint)*);
alias fp_glClearBufferuiv = void function(GLenum, GLint, const(GLuint)*);
alias fp_glClearBufferfv = void function(GLenum, GLint, const(GLfloat)*);
alias fp_glClearBufferfi = void function(GLenum, GLint, GLfloat, GLint);
alias fp_glGetStringi = const(GLubyte)* function(GLenum, GLuint);
alias fp_glCopyBufferSubData = void function(GLenum, GLenum, GLintptr, GLintptr, GLsizeiptr);
alias fp_glGetUniformIndices = void function(GLuint, GLsizei, const(GLchar*)*, GLuint*);
alias fp_glGetActiveUniformsiv = void function(GLuint, GLsizei, const(GLuint)*, GLenum, GLint*);
alias fp_glGetUniformBlockIndex = GLuint function(GLuint, const(GLchar)*);
alias fp_glGetActiveUniformBlockiv = void function(GLuint, GLuint, GLenum, GLint*);
alias fp_glGetActiveUniformBlockName = void function(GLuint, GLuint, GLsizei, GLsizei*, GLchar*);
alias fp_glUniformBlockBinding = void function(GLuint, GLuint, GLuint);
alias fp_glDrawArraysInstanced = void function(GLenum, GLint, GLsizei, GLsizei);
alias fp_glDrawElementsInstanced = void function(GLenum, GLsizei, GLenum, const(void)*, GLsizei);
alias fp_glFenceSync = GLsync function(GLenum, GLbitfield);
alias fp_glIsSync = GLboolean function(GLsync);
alias fp_glDeleteSync = void function(GLsync);
alias fp_glClientWaitSync = GLenum function(GLsync, GLbitfield, GLuint64);
alias fp_glWaitSync = void function(GLsync, GLbitfield, GLuint64);
alias fp_glGetInteger64v = void function(GLenum, GLint64*);
alias fp_glGetSynciv = void function(GLsync, GLenum, GLsizei, GLsizei*, GLint*);
alias fp_glGetInteger64i_v = void function(GLenum, GLuint, GLint64*);
alias fp_glGetBufferParameteri64v = void function(GLenum, GLenum, GLint64*);
alias fp_glGenSamplers = void function(GLsizei, GLuint*);
alias fp_glDeleteSamplers = void function(GLsizei, const(GLuint)*);
alias fp_glIsSampler = GLboolean function(GLuint);
alias fp_glBindSampler = void function(GLuint, GLuint);
alias fp_glSamplerParameteri = void function(GLuint, GLenum, GLint);
alias fp_glSamplerParameteriv = void function(GLuint, GLenum, const(GLint)*);
alias fp_glSamplerParameterf = void function(GLuint, GLenum, GLfloat);
alias fp_glSamplerParameterfv = void function(GLuint, GLenum, const(GLfloat)*);
alias fp_glGetSamplerParameteriv = void function(GLuint, GLenum, GLint*);
alias fp_glGetSamplerParameterfv = void function(GLuint, GLenum, GLfloat*);
alias fp_glVertexAttribDivisor = void function(GLuint, GLuint);
alias fp_glBindTransformFeedback = void function(GLenum, GLuint);
alias fp_glDeleteTransformFeedbacks = void function(GLsizei, const(GLuint)*);
alias fp_glGenTransformFeedbacks = void function(GLsizei, GLuint*);
alias fp_glIsTransformFeedback = GLboolean function(GLuint);
alias fp_glPauseTransformFeedback = void function();
alias fp_glResumeTransformFeedback = void function();
alias fp_glGetProgramBinary = void function(GLuint, GLsizei, GLsizei*, GLenum*, void*);
alias fp_glProgramBinary = void function(GLuint, GLenum, const(void)*, GLsizei);
alias fp_glProgramParameteri = void function(GLuint, GLenum, GLint);
alias fp_glInvalidateFramebuffer = void function(GLenum, GLsizei, const(GLenum)*);
alias fp_glInvalidateSubFramebuffer = void function(GLenum, GLsizei, const(GLenum)*, GLint, GLint, GLsizei, GLsizei);
alias fp_glTexStorage2D = void function(GLenum, GLsizei, GLenum, GLsizei, GLsizei);
alias fp_glTexStorage3D = void function(GLenum, GLsizei, GLenum, GLsizei, GLsizei, GLsizei);
alias fp_glGetInternalformativ = void function(GLenum, GLenum, GLenum, GLsizei, GLint*);
}
__gshared {
fp_glIsQuery glIsQuery;
fp_glGenVertexArrays glGenVertexArrays;
fp_glBindBufferBase glBindBufferBase;
fp_glCopyTexSubImage2D glCopyTexSubImage2D;
fp_glUniform4i glUniform4i;
fp_glIsFramebuffer glIsFramebuffer;
fp_glGetIntegeri_v glGetIntegeri_v;
fp_glDeleteSync glDeleteSync;
fp_glDepthMask glDepthMask;
fp_glDeleteProgram glDeleteProgram;
fp_glGetUniformfv glGetUniformfv;
fp_glGetVertexAttribPointerv glGetVertexAttribPointerv;
fp_glGetTexParameterfv glGetTexParameterfv;
fp_glCompressedTexImage3D glCompressedTexImage3D;
fp_glUniformMatrix2x3fv glUniformMatrix2x3fv;
fp_glBlitFramebuffer glBlitFramebuffer;
fp_glClearBufferuiv glClearBufferuiv;
fp_glDisableVertexAttribArray glDisableVertexAttribArray;
fp_glUniform2uiv glUniform2uiv;
fp_glGetProgramInfoLog glGetProgramInfoLog;
fp_glEndQuery glEndQuery;
fp_glUniform3uiv glUniform3uiv;
fp_glUniform1uiv glUniform1uiv;
fp_glTexParameteriv glTexParameteriv;
fp_glCompressedTexImage2D glCompressedTexImage2D;
fp_glUniformMatrix2x4fv glUniformMatrix2x4fv;
fp_glGetAttachedShaders glGetAttachedShaders;
fp_glFramebufferRenderbuffer glFramebufferRenderbuffer;
fp_glViewport glViewport;
fp_glTexStorage3D glTexStorage3D;
fp_glBufferData glBufferData;
fp_glDepthFunc glDepthFunc;
fp_glGetBufferPointerv glGetBufferPointerv;
fp_glGetVertexAttribiv glGetVertexAttribiv;
fp_glTexSubImage3D glTexSubImage3D;
fp_glGetUniformBlockIndex glGetUniformBlockIndex;
fp_glBindFramebuffer glBindFramebuffer;
fp_glDetachShader glDetachShader;
fp_glDrawElements glDrawElements;
fp_glUniform1i glUniform1i;
fp_glFenceSync glFenceSync;
fp_glUniformMatrix3fv glUniformMatrix3fv;
fp_glGetShaderPrecisionFormat glGetShaderPrecisionFormat;
fp_glSampleCoverage glSampleCoverage;
fp_glDrawRangeElements glDrawRangeElements;
fp_glUniformMatrix3x2fv glUniformMatrix3x2fv;
fp_glFramebufferTextureLayer glFramebufferTextureLayer;
fp_glColorMask glColorMask;
fp_glDisable glDisable;
fp_glBlendFunc glBlendFunc;
fp_glTexStorage2D glTexStorage2D;
fp_glUniform3i glUniform3i;
fp_glHint glHint;
fp_glGenSamplers glGenSamplers;
fp_glVertexAttrib1fv glVertexAttrib1fv;
fp_glValidateProgram glValidateProgram;
fp_glGetActiveUniform glGetActiveUniform;
fp_glIsShader glIsShader;
fp_glPolygonOffset glPolygonOffset;
fp_glGetString glGetString;
fp_glGetProgramBinary glGetProgramBinary;
fp_glCopyBufferSubData glCopyBufferSubData;
fp_glGetVertexAttribfv glGetVertexAttribfv;
fp_glUniform1iv glUniform1iv;
fp_glStencilOpSeparate glStencilOpSeparate;
fp_glGetProgramiv glGetProgramiv;
fp_glGetActiveUniformsiv glGetActiveUniformsiv;
fp_glBlendEquationSeparate glBlendEquationSeparate;
fp_glShaderSource glShaderSource;
fp_glEnable glEnable;
fp_glGetError glGetError;
fp_glVertexAttrib4f glVertexAttrib4f;
fp_glGetStringi glGetStringi;
fp_glEndTransformFeedback glEndTransformFeedback;
fp_glVertexAttribI4ui glVertexAttribI4ui;
fp_glGetActiveUniformBlockiv glGetActiveUniformBlockiv;
fp_glCompressedTexSubImage2D glCompressedTexSubImage2D;
fp_glGenRenderbuffers glGenRenderbuffers;
fp_glUniformMatrix4x2fv glUniformMatrix4x2fv;
fp_glDeleteShader glDeleteShader;
fp_glFlush glFlush;
fp_glTexSubImage2D glTexSubImage2D;
fp_glDeleteBuffers glDeleteBuffers;
fp_glDeleteVertexArrays glDeleteVertexArrays;
fp_glUniform2ui glUniform2ui;
fp_glInvalidateSubFramebuffer glInvalidateSubFramebuffer;
fp_glGetSamplerParameterfv glGetSamplerParameterfv;
fp_glGetTransformFeedbackVarying glGetTransformFeedbackVarying;
fp_glUniform1ui glUniform1ui;
fp_glGenerateMipmap glGenerateMipmap;
fp_glGetUniformLocation glGetUniformLocation;
fp_glVertexAttrib3fv glVertexAttrib3fv;
fp_glGetSynciv glGetSynciv;
fp_glClearDepthf glClearDepthf;
fp_glGetIntegerv glGetIntegerv;
fp_glUniform2fv glUniform2fv;
fp_glSamplerParameteri glSamplerParameteri;
fp_glStencilMaskSeparate glStencilMaskSeparate;
fp_glEnableVertexAttribArray glEnableVertexAttribArray;
fp_glReadPixels glReadPixels;
fp_glUniform1fv glUniform1fv;
fp_glCompressedTexSubImage3D glCompressedTexSubImage3D;
fp_glBindTexture glBindTexture;
fp_glBlendColor glBlendColor;
fp_glCullFace glCullFace;
fp_glVertexAttrib4fv glVertexAttrib4fv;
fp_glCopyTexSubImage3D glCopyTexSubImage3D;
fp_glTexParameteri glTexParameteri;
fp_glBeginQuery glBeginQuery;
fp_glClearBufferfi glClearBufferfi;
fp_glUniformBlockBinding glUniformBlockBinding;
fp_glUseProgram glUseProgram;
fp_glVertexAttribDivisor glVertexAttribDivisor;
fp_glFlushMappedBufferRange glFlushMappedBufferRange;
fp_glUniform2f glUniform2f;
fp_glIsSampler glIsSampler;
fp_glGetFramebufferAttachmentParameteriv glGetFramebufferAttachmentParameteriv;
fp_glClear glClear;
fp_glDrawElementsInstanced glDrawElementsInstanced;
fp_glLineWidth glLineWidth;
fp_glGetShaderInfoLog glGetShaderInfoLog;
fp_glVertexAttrib1f glVertexAttrib1f;
fp_glDeleteTransformFeedbacks glDeleteTransformFeedbacks;
fp_glStencilOp glStencilOp;
fp_glVertexAttribI4iv glVertexAttribI4iv;
fp_glShaderBinary glShaderBinary;
fp_glGetUniformiv glGetUniformiv;
fp_glUniformMatrix2fv glUniformMatrix2fv;
fp_glCopyTexImage2D glCopyTexImage2D;
fp_glGetVertexAttribIuiv glGetVertexAttribIuiv;
fp_glClearBufferfv glClearBufferfv;
fp_glGetInteger64i_v glGetInteger64i_v;
fp_glVertexAttrib2f glVertexAttrib2f;
fp_glUniform4ui glUniform4ui;
fp_glStencilFuncSeparate glStencilFuncSeparate;
fp_glLinkProgram glLinkProgram;
fp_glGetTexParameteriv glGetTexParameteriv;
fp_glRenderbufferStorageMultisample glRenderbufferStorageMultisample;
fp_glReadBuffer glReadBuffer;
fp_glAttachShader glAttachShader;
fp_glBlendFuncSeparate glBlendFuncSeparate;
fp_glDeleteTextures glDeleteTextures;
fp_glUniform4iv glUniform4iv;
fp_glUniformMatrix4fv glUniformMatrix4fv;
fp_glUniform3ui glUniform3ui;
fp_glFrontFace glFrontFace;
fp_glUniformMatrix3x4fv glUniformMatrix3x4fv;
fp_glGetInteger64v glGetInteger64v;
fp_glBindTransformFeedback glBindTransformFeedback;
fp_glBindRenderbuffer glBindRenderbuffer;
fp_glResumeTransformFeedback glResumeTransformFeedback;
fp_glVertexAttrib2fv glVertexAttrib2fv;
fp_glGetActiveUniformBlockName glGetActiveUniformBlockName;
fp_glProgramBinary glProgramBinary;
fp_glCreateProgram glCreateProgram;
fp_glUniformMatrix4x3fv glUniformMatrix4x3fv;
fp_glTexParameterf glTexParameterf;
fp_glTexParameterfv glTexParameterfv;
fp_glGenFramebuffers glGenFramebuffers;
fp_glGetAttribLocation glGetAttribLocation;
fp_glPauseTransformFeedback glPauseTransformFeedback;
fp_glVertexAttrib3f glVertexAttrib3f;
fp_glFinish glFinish;
fp_glVertexAttribPointer glVertexAttribPointer;
fp_glUniform1f glUniform1f;
fp_glDrawArraysInstanced glDrawArraysInstanced;
fp_glStencilMask glStencilMask;
fp_glCheckFramebufferStatus glCheckFramebufferStatus;
fp_glBeginTransformFeedback glBeginTransformFeedback;
fp_glVertexAttribI4uiv glVertexAttribI4uiv;
fp_glUniform2i glUniform2i;
fp_glSamplerParameterfv glSamplerParameterfv;
fp_glBindBuffer glBindBuffer;
fp_glBindSampler glBindSampler;
fp_glUnmapBuffer glUnmapBuffer;
fp_glClearColor glClearColor;
fp_glIsVertexArray glIsVertexArray;
fp_glBufferSubData glBufferSubData;
fp_glGenBuffers glGenBuffers;
fp_glProgramParameteri glProgramParameteri;
fp_glReleaseShaderCompiler glReleaseShaderCompiler;
fp_glWaitSync glWaitSync;
fp_glVertexAttribIPointer glVertexAttribIPointer;
fp_glInvalidateFramebuffer glInvalidateFramebuffer;
fp_glGetQueryiv glGetQueryiv;
fp_glActiveTexture glActiveTexture;
fp_glDepthRangef glDepthRangef;
fp_glUniform3f glUniform3f;
fp_glUniform3fv glUniform3fv;
fp_glFramebufferTexture2D glFramebufferTexture2D;
fp_glBindVertexArray glBindVertexArray;
fp_glGetRenderbufferParameteriv glGetRenderbufferParameteriv;
fp_glUniform2iv glUniform2iv;
fp_glUniform4fv glUniform4fv;
fp_glGetBufferParameteri64v glGetBufferParameteri64v;
fp_glTexImage2D glTexImage2D;
fp_glGenTransformFeedbacks glGenTransformFeedbacks;
fp_glDrawBuffers glDrawBuffers;
fp_glIsRenderbuffer glIsRenderbuffer;
fp_glGetSamplerParameteriv glGetSamplerParameteriv;
fp_glGetInternalformativ glGetInternalformativ;
fp_glGetBufferParameteriv glGetBufferParameteriv;
fp_glGenTextures glGenTextures;
fp_glIsBuffer glIsBuffer;
fp_glGetVertexAttribIiv glGetVertexAttribIiv;
fp_glGetUniformuiv glGetUniformuiv;
fp_glTexImage3D glTexImage3D;
fp_glGetShaderSource glGetShaderSource;
fp_glUniform4f glUniform4f;
fp_glClearStencil glClearStencil;
fp_glGetFloatv glGetFloatv;
fp_glSamplerParameteriv glSamplerParameteriv;
fp_glUniform4uiv glUniform4uiv;
fp_glVertexAttribI4i glVertexAttribI4i;
fp_glDrawArrays glDrawArrays;
fp_glScissor glScissor;
fp_glTransformFeedbackVaryings glTransformFeedbackVaryings;
fp_glIsProgram glIsProgram;
fp_glGetShaderiv glGetShaderiv;
fp_glDeleteRenderbuffers glDeleteRenderbuffers;
fp_glIsEnabled glIsEnabled;
fp_glMapBufferRange glMapBufferRange;
fp_glIsSync glIsSync;
fp_glClientWaitSync glClientWaitSync;
fp_glGetBooleanv glGetBooleanv;
fp_glBlendEquation glBlendEquation;
fp_glGenQueries glGenQueries;
fp_glGetUniformIndices glGetUniformIndices;
fp_glIsTransformFeedback glIsTransformFeedback;
fp_glBindAttribLocation glBindAttribLocation;
fp_glPixelStorei glPixelStorei;
fp_glDeleteQueries glDeleteQueries;
fp_glSamplerParameterf glSamplerParameterf;
fp_glBindBufferRange glBindBufferRange;
fp_glCreateShader glCreateShader;
fp_glDeleteSamplers glDeleteSamplers;
fp_glCompileShader glCompileShader;
fp_glStencilFunc glStencilFunc;
fp_glUniform3iv glUniform3iv;
fp_glDeleteFramebuffers glDeleteFramebuffers;
fp_glGetActiveAttrib glGetActiveAttrib;
fp_glIsTexture glIsTexture;
fp_glRenderbufferStorage glRenderbufferStorage;
fp_glGetFragDataLocation glGetFragDataLocation;
fp_glClearBufferiv glClearBufferiv;
fp_glGetQueryObjectuiv glGetQueryObjectuiv;
}
